.\"$Header: cons.4,v 10.1 86/11/19 10:55:30 jg Exp $
.\"$Source: /u1/X/libibm/doc/man/RCS/cons.4,v $
.\" This file uses -man macros.
.TH CONS 4 "31 Mar 1986" "Space overwritten by .AC macro" " " 
.UC 4
.AC 1 0 
.SH NAME
cons \- keyboard and console display interface
.SH DESCRIPTION
The keyboard and various possible displays combine to 
provide a terminal-like
interface to the system. Internally, these are separate devices which
software combines to emulate a normal terminal. See the appropriate manual
pages for information about each display and the keyboard.
.PP
The keyboard adapter also supports the speaker, which is activated 
when the ASCII character \fBbel\fP 
.RB ( ^G )
is sent to the display via software.
.PP
.B Console Device Control.
.PP
The display devices, 
\fI/dev/ttyaed\fR, \fI/dev/ttymono\fR, \fI/dev/ttyap16\fR,
\fI/dev/ttyapa8\fR, and \fI/dev/ttyap8c\fR are all
minor devices under 
\fI/dev/console\fR, and are all capable of displaying console 
output. Uniq to this system is the fact that you may have one or more of these
displays on your workstation at a time and any one can act as a console.
Since we only have one keyboard and system mouse the console driver
multiplexes these two input devices to the many displays.
All of the displays may have simultaneous logins and the user
may "hot key" between each display.
At first, this 
.I Input focus
is on
the first device in the above sequence to 
be found at initialization time.  The input focus
may be manually switched to the next available display by hiting the
default "hot key" 
.I <F12>.
When the
.I input focus
is on a display all keyboard and mouse data will be sent to the process
which opened that display.
.PP
If a process opens
.I /dev/console
it gets assigned to whatever the
.I input focus
was at the time of the open.
A user can forward console messages to any tty/display with the 
TIOCCONS ioctl.
.PP
In order to support the many displays and the multiplexing between them an,
\fIEmulator Package\fR was developed to work with the console driver.
This package allows different types off emulation on input and output to
be written device independently.
.PP
The display devices, 
\fI/dev/aed\fR, \fI/dev/mono\fR, \fI/dev/apa16\fR,
\fI/dev/apa8\fR, and \fI/dev/apa8c\fR are all
.PP
Should a user-process open the current console display
(thus making it unavailable for console use), the console output 
switches to the next available display. A device is
available if it is present, not already open, and access has not been
denied (as described below.)
.PP
Should no display be available to serve as console,
console output is stored in a system-provided circular buffer.
Once the user-process completes, the display is reopened as a
console and the buffer contents are flushed to the display.
.PP
.B Controlled access to multiple console displays.
.PP
It can be useful to deny access temporarily to one or more displays. 
For example, if the monochrome/printer adapter is present, the kernel
assumes the presence of the monochrome display -- even if disconnected -- and
attempts to initialize it. This can be blocked by modifying the access  
control bits for each display device (see 
\fI<machinecons/consio.h>\fR):
.PP
.DT
	CONSDEV_KERNEL (this device available to kernel)
.br
	CONSDEV_USER (this device available to user)
.PP
An ioctl, SCRIOCSETC (screen ioctl:set configuration), sets
the desired access rights of a particular device.
SCRIOCGETF (screen ioctl:get flags) gets
the present state of a particular device:
.PP
.DT
	CONSDEV_PRESENT	(kernel has detected adapter)
.br
	CONSDEV_KERNEL 
.br
	CONSDEV_USER
.br
	CONSDEV_INIT (device is initialized for console use)
.br
	CONSDEV_OPEN (device is opened for user access).
.PP
These ioctls are used by \fIsetscreen\fR(8).
.SH NOTE
The kernel flashes ``98'' on the LEDs if it cannot find any
configured display during initialization, and then proceeds. 
.SH FILES
/dev/console
.br
/dev/mono
.br
/dev/apa8
.br
/dev/apa16
.br
/dev/aed
.SH "SEE ALSO"
ibm5151(4), ibm6153(4), 
ibm6155(4), ibmaed(4), keyboard(4),
tty(4), setscreen(8)
.br
.SH DIAGNOSTICS
None.
